import { createContext, useContext, useState, ReactNode } from 'react';

type Language = 'en' | 'hi';

interface TranslationContextType {
  language: Language;
  toggleLanguage: () => void;
  translate: (key: string) => string;
}

const translations = {
  en: {
    // Auth
    'auth.login': 'Login',
    'auth.signup': 'Sign Up',
    'auth.email': 'Email',
    'auth.password': 'Password',
    'auth.fullName': 'Full Name',
    'auth.createAccount': 'Create Account',
    'auth.alreadyAccount': 'Already have an account?',
    'auth.noAccount': "Don't have an account?",
    'auth.welcome': 'Welcome to YourMannMitra',
    'auth.subtitle': 'Your Mental Wellness Companion',
    
    // Dashboard
    'dashboard.goodMorning': 'Good morning',
    'dashboard.namaste': '‡§®‡§Æ‡§∏‡•ç‡§§‡•á! How can we support you today?',
    'dashboard.streak': 'Streak: 7 days üî•',
    'dashboard.quickMood': 'Quick Mood Check',
    'dashboard.emergency': 'Need Immediate Support?',
    'dashboard.helpline': 'India\'s National Mental Health Helpline is available 24/7',
    'dashboard.kiranCall': 'Call KIRAN: 1800-599-0019',
    
    // Features
    'features.aiCompanion': 'AI Companion',
    'features.aiCompanionDesc': 'Chat with your wellness buddy',
    'features.moodTracker': 'Mood Check-in',
    'features.moodTrackerDesc': 'How are you feeling today?',
    'features.wellnessHub': 'Wellness Hub',
    'features.wellnessHubDesc': 'Guided meditations & videos',
    'features.bookCounselor': 'Book Counselor',
    'features.bookCounselorDesc': 'Professional support available',
    'features.peerSupport': 'Peer Support',
    'features.peerSupportDesc': 'Anonymous community chat',
    'features.dailyJournal': 'Daily Journal',
    'features.dailyJournalDesc': 'Reflect and express yourself',
    'features.myProgress': 'My Progress',
    'features.myProgressDesc': 'Track your wellness journey',
    'features.mindfulGames': 'Mindful Games',
    'features.mindfulGamesDesc': 'Relaxing interactive activities',
    
    // Common
    'common.save': 'Save',
    'common.cancel': 'Cancel',
    'common.back': 'Back',
    'common.logout': 'Logout',
    'common.translate': '‡§π‡§ø‡§Ç‡§¶‡•Ä',
  },
  hi: {
    // Auth
    'auth.login': '‡§≤‡•â‡§ó‡§ø‡§®',
    'auth.signup': '‡§∏‡§æ‡§á‡§® ‡§Ö‡§™',
    'auth.email': '‡§à‡§Æ‡•á‡§≤',
    'auth.password': '‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§°',
    'auth.fullName': '‡§™‡•Ç‡§∞‡§æ ‡§®‡§æ‡§Æ',
    'auth.createAccount': '‡§ñ‡§æ‡§§‡§æ ‡§¨‡§®‡§æ‡§è‡§Ç',
    'auth.alreadyAccount': '‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§ñ‡§æ‡§§‡§æ ‡§π‡•à?',
    'auth.noAccount': '‡§ñ‡§æ‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à?',
    'auth.welcome': 'YourMannMitra ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à',
    'auth.subtitle': '‡§Ü‡§™‡§ï‡§æ ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§∏‡§æ‡§•‡•Ä',
    
    // Dashboard
    'dashboard.goodMorning': '‡§∏‡•Å‡§™‡•ç‡§∞‡§≠‡§æ‡§§',
    'dashboard.namaste': '‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Ü‡§ú ‡§π‡§Æ ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç?',
    'dashboard.streak': '‡§≤‡§ó‡§æ‡§§‡§æ‡§∞: 7 ‡§¶‡§ø‡§® üî•',
    'dashboard.quickMood': '‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§Æ‡•Ç‡§° ‡§ú‡§æ‡§Ç‡§ö',
    'dashboard.emergency': '‡§§‡§§‡•ç‡§ï‡§æ‡§≤ ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ö‡§æ‡§π‡§ø‡§è?',
    'dashboard.helpline': '‡§≠‡§æ‡§∞‡§§ ‡§ï‡•Ä ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§® 24/7 ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à',
    'dashboard.kiranCall': 'KIRAN ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç: 1800-599-0019',
    
    // Features
    'features.aiCompanion': 'AI ‡§∏‡§æ‡§•‡•Ä',
    'features.aiCompanionDesc': '‡§Ö‡§™‡§®‡•á ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Æ‡§ø‡§§‡•ç‡§∞ ‡§∏‡•á ‡§¨‡§æ‡§§ ‡§ï‡§∞‡•á‡§Ç',
    'features.moodTracker': '‡§Æ‡•Ç‡§° ‡§ö‡•á‡§ï-‡§á‡§®',
    'features.moodTrackerDesc': '‡§Ü‡§ú ‡§Ü‡§™ ‡§ï‡•à‡§∏‡§æ ‡§Æ‡§π‡§∏‡•Ç‡§∏ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç?',
    'features.wellnessHub': '‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞',
    'features.wellnessHubDesc': '‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂‡§ø‡§§ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§î‡§∞ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã',
    'features.bookCounselor': '‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂‡§¶‡§æ‡§§‡§æ ‡§¨‡•Å‡§ï ‡§ï‡§∞‡•á‡§Ç',
    'features.bookCounselorDesc': '‡§™‡•á‡§∂‡•á‡§µ‡§∞ ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß',
    'features.peerSupport': '‡§∏‡§æ‡§•‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ',
    'features.peerSupportDesc': '‡§ó‡•Å‡§Æ‡§®‡§æ‡§Æ ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø‡§ø‡§ï ‡§ö‡•à‡§ü',
    'features.dailyJournal': '‡§¶‡•à‡§®‡§ø‡§ï ‡§°‡§æ‡§Ø‡§∞‡•Ä',
    'features.dailyJournalDesc': '‡§ö‡§ø‡§Ç‡§§‡§® ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§ñ‡•Å‡§¶ ‡§ï‡•ã ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç',
    'features.myProgress': '‡§Æ‡•á‡§∞‡•Ä ‡§™‡•ç‡§∞‡§ó‡§§‡§ø',
    'features.myProgressDesc': '‡§Ö‡§™‡§®‡•á ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡•ã ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç',
    'features.mindfulGames': '‡§Æ‡§® ‡§ï‡•Ä ‡§∂‡§æ‡§Ç‡§§‡§ø ‡§ï‡•á ‡§ñ‡•á‡§≤',
    'features.mindfulGamesDesc': '‡§Ü‡§∞‡§æ‡§Æ ‡§¶‡•á‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§á‡§Ç‡§ü‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§µ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡§æ‡§Ç',
    
    // Common
    'common.save': '‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç',
    'common.cancel': '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç',
    'common.back': '‡§µ‡§æ‡§™‡§∏',
    'common.logout': '‡§≤‡•â‡§ó‡§Ü‡§â‡§ü',
    'common.translate': 'English',
  },
};

const TranslationContext = createContext<TranslationContextType | undefined>(undefined);

export function TranslationProvider({ children }: { children: ReactNode }) {
  const [language, setLanguage] = useState<Language>('en');

  const toggleLanguage = () => {
    setLanguage(prev => prev === 'en' ? 'hi' : 'en');
  };

  const translate = (key: string) => {
    return translations[language][key as keyof typeof translations['en']] || key;
  };

  return (
    <TranslationContext.Provider
      value={{
        language,
        toggleLanguage,
        translate,
      }}
    >
      {children}
    </TranslationContext.Provider>
  );
}

export function useTranslation() {
  const context = useContext(TranslationContext);
  if (context === undefined) {
    throw new Error('useTranslation must be used within a TranslationProvider');
  }
  return context;
}